Block()
   Statement(43)
      Expression()
         Assignment()
            Expression()
               Address(stack:0x0 + 0x0)
            Expression()
               Literal(int:5)
   Statement(46)
      Expression()
         Assignment()
            Expression()
               Address(+0x0)
                  Child:Subscript()
                     Expression:Expression()
                        Address(stack:0x0 + 0x0)
                     Subscript:Expression()
                        Literal(int:0)
            Expression()
               TypeCast()
                  Expression()
                     TypeCast()
                        Expression()
                           Literal(float:1.200000)
   Statement(47)
      Expression()
         Assignment()
            Expression()
               Address(+0x8)
                  Child:Subscript()
                     Expression:Expression()
                        Address(stack:0x0 + 0x0)
                     Subscript:Expression()
                        Literal(int:0)
            Expression()
               TypeCast()
                  Expression()
                     Literal(int:1)
   Statement(48)
      Expression()
         Assignment()
            Expression()
               Address(+0x10)
                  Child:Subscript()
                     Expression:Expression()
                        Address(stack:0x0 + 0x0)
                     Subscript:Expression()
                        Literal(int:0)
            Expression()
               TypeCast()
                  Expression()
                     Literal(int:0)
   Statement(49)
      Expression()
         Assignment()
            Expression()
               Address(+0x18)
                  Child:Subscript()
                     Expression:Expression()
                        Address(stack:0x0 + 0x0)
                     Subscript:Expression()
                        Literal(int:0)
            Expression()
               TypeCast()
                  Expression()
                     Literal(int:1)
   Statement(51)
      Assignment()
         Expression()
            Address(stack:0x40 + 0x0)
         Expression()
            Procedure-Call()
               Procedure-Id:Expression()
                  Address(code:0x5587a8c63020 + 0x0)
               Expression()
                  Literal(int:5)
               Expression()
                  Unary Operator(*)
                     Address(stack:+0x40)
   Statement(52)
      Assignment()
         Expression()
            Address(stack:0x48 + 0x0)
         Expression()
            Procedure-Call()
               Procedure-Id:Expression()
                  Address(code:0x5587a8c63020 + 0x0)
               Expression()
                  Literal(int:1)
               Expression()
                  Unary Operator(*)
                     Address(stack:+0x48)
   Statement(53)
      Assignment()
         Expression()
            Address(stack:0x50 + 0x0)
         Expression()
            Procedure-Call()
               Procedure-Id:Expression()
                  Address(code:0x5587a8c63020 + 0x0)
               Expression()
                  Literal(int:0)
               Expression()
                  Literal(*void:null)
   Statement(55)
      Assignment()
         Expression()
            Address(stack:0x58 + 0x0)
         Expression()
            TypeCast()
               Expression()
                  Address(stack:0x0 + 0x0)
   Statement(57)
      Assignment()
         Expression()
            Address(stack:0x68 + 0x0)
         Expression()
            Literal(struct:string)
   Statement(59)
      Assignment()
         Expression()
            Address(stack:0x78 + 0x0)
         Expression()
            Literal(int:64)
   Statement(61)
      Assignment()
         Expression()
            Address(stack:0x80 + 0x0)
         Expression()
            Procedure-Call()
               Procedure-Id:Expression()
                  Address(ccall:0x5587a8a8b66b + 0x0)
               Expression()
                  Binary Operator(*)
                     Literal(int:1)
                     Literal(int:32)
   Statement(62)
      Assignment()
         Expression()
            Address(stack:0x88 + 0x0)
         Expression()
            Binary Operator(+)
               TypeCast()
                  Expression()
                     Address(stack:0x80 + 0x0)
               Literal(int:1)
   Statement(64)
      Assignment()
         Expression()
            Address(stack:0x90 + 0x0)
         Expression()
            Unary Operator(?)
               Address(stack:0x88 + 0x0)
   Statement(66)
      Expression()
         Procedure-Call()
            Procedure-Id:Expression()
               Address(ccall:0x5587a8a8b6f3 + 0x0)
            Expression()
               Address(stack:0x80 + 0x0)
   Statement(68)
      Assignment()
         Expression()
            Address(stack:0xb0 + 0x0)
         Expression()
            Literal(int:2)
   Statement(70)
      Assignment()
         Expression()
            Address(stack:0xb8 + 0x0)
         Expression()
            Procedure-Call()
               Procedure-Id:Expression()
                  Address(code:0x5587a8c59de0 + 0x0)
               Expression()
                  TypeCast()
                     Expression()
                        Literal(int:5)
   Statement(73)
      Expression()
         Assignment()
            Expression()
               Address(stack:0xc8 + 0x0)
            Expression()
               Address(stack:0x0 + 0x0)
   Statement(75)
      Block()
         Statement(77)
            Expression()
               Assignment()
                  Expression()
                     Address(stack:0xd0 + 0x0)
                  Expression()
                     Unary Operator(*)
                        Address(stack:0xb8 + 0x0)
         Statement(78)
            Expression()
               Assignment()
                  Expression()
                     Address(stack:0xb8 + 0x0)
                  Expression()
                     Unary Operator(?)
                        Address(stack:0xd0 + 0x0)
   Statement(82)
      Expression()
         Assignment()
            Expression()
               Address(stack:0xd0 + 0x0)
            Expression()
               Unary Operator(!)
                  Literal(bool:false)
   Statement(84)
      Expression()
         Assignment()
            Expression()
               Address(stack:0xb8 + 0x0)
            Expression()
               TypeCast()
                  Expression()
                     Binary Operator(&)
                        Literal(int:5)
                        Unary Operator(~)
                           Address(stack:0xc0 + 0x0)
   Statement(86)
      Expression()
         Assignment()
            Expression()
               Address(stack:0xb8 + 0x0)
            Expression()
               TypeCast()
                  Expression()
                     Binary Operator(+)
                        Binary Operator(+)
                           Unary Operator(-)
                              Literal(int:5)
                           Binary Operator(/)
                              Binary Operator(*)
                                 Literal(int:6)
                                 Literal(int:3)
                              Binary Operator(-)
                                 Literal(int:5)
                                 Literal(int:8)
                        Literal(int:5)
   Statement(87)
      Expression()
         Assignment()
            Expression()
               Address(stack:0xc0 + 0x0)
            Expression()
               Binary Operator(+)
                  Binary Operator(/)
                     Literal(int:9)
                     Literal(int:3)
                  Literal(int:2)
   Statement(90)
      Expression()
         Assignment()
            Expression()
               Address(stack:0xd8 + 0x0)
            Expression()
               Binary Operator(+)
                  Address(stack:0xb8 + 0x0)
                  TypeCast()
                     Expression()
                        Address(stack:0xc0 + 0x0)
   Statement(92)
      If()
         Condition:Expression()
            Binary Operator(==)
               Binary Operator(&)
                  Address(stack:0xc0 + 0x0)
                  Literal(int:1)
               Literal(int:0)
         True-Statement:Statement(92)
            Block()
               Statement(93)
                  Expression()
                     Assignment()
                        Expression()
                           Address(stack:0xd0 + 0x0)
                        Expression()
                           TypeCast()
                              Expression()
                                 Literal(int:0)
         False-Statement:Statement(95)
            If()
               Condition:Expression()
                  Binary Operator(!=)
                     Address(stack:0xc0 + 0x0)
                     Literal(int:0)
               True-Statement:Statement(95)
                  Block()
                     Statement(96)
                        Expression()
                           Assignment()
                              Expression()
                                 Address(stack:0xd0 + 0x0)
                              Expression()
                                 Literal(bool:true)
   Statement(99)
      Assignment()
         Expression()
            Address(stack:0xe0 + 0x0)
         Expression()
            Literal(int:0)
   Statement(101)
      For()
         Initialization:Statement(101)
            Assignment()
               Expression()
                  Address(stack:0xe8 + 0x0)
               Expression()
                  Literal(int:0)
         Condition:Expression()
            Binary Operator(<)
               Address(stack:0xe8 + 0x0)
               Literal(int:100)
         Increment:Expression()
            Assignment()
               Expression()
                  Address(stack:0xe8 + 0x0)
               Expression()
                  Binary Operator(+)
                     Address(stack:0xe8 + 0x0)
                     Literal(int:1)
         Body:Statement(101)
            Block()
               Statement(102)
                  Expression()
                     Procedure-Call()
                        Procedure-Id:Expression()
                           Address(ccall:0x5587a8a8b733 + 0x0)
                        Expression()
                           Literal(struct:string)
                        Expression()
                           Unary Operator(*)
                              Address(stack:+0xf0)
               Statement(103)
                  Expression()
                     Assignment()
                        Expression()
                           Address(stack:0xe0 + 0x0)
                        Expression()
                           Binary Operator(+)
                              Address(stack:0xe0 + 0x0)
                              Address(stack:0xe8 + 0x0)
   Statement(106)
      Expression()
         Procedure-Call()
            Procedure-Id:Expression()
               Address(ccall:0x5587a8a8b733 + 0x0)
            Expression()
               Literal(struct:string)
            Expression()
               Unary Operator(*)
                  Address(stack:+0xe8)
   Statement(107)
      While()
         Condition:Expression()
            TypeCast()
               Expression()
                  Address(stack:0xe0 + 0x0)
         Body:Statement(107)
            Block()
               Statement(108)
                  Expression()
                     Assignment()
                        Expression()
                           Address(stack:0xe0 + 0x0)
                        Expression()
                           Binary Operator(-)
                              Address(stack:0xe0 + 0x0)
                              Literal(int:1)
   Statement(111)
      Assignment()
         Expression()
            Address(stack:0xe8 + 0x0)
         Expression()
            Literal(int:9)
   Statement(113)
      Do()
         Body:Statement(113)
            Block()
               Statement(114)
                  Expression()
                     Binary Operator(+=)
                        Address(stack:0xe0 + 0x0)
                        Literal(int:1)
               Statement(115)
                  Expression()
                     Binary Operator(-=)
                        Address(stack:0xe8 + 0x0)
                        Literal(int:1)
         Condition:Expression()
            Binary Operator(>=)
               Address(stack:0xe8 + 0x0)
               Literal(int:0)
