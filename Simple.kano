
const factorial := proc(var n: float) -> float {
	if n <= 1 then return 1;
	return n * factorial(n - 1);
}

// 0, 1, 1, 2, 3, 5, 8
// 0, 1, 2, 3, 4, 5, 6

const fib := proc(var a: int) -> int {
	if a <= 0 then return 0;
	if a == 1 then return 1;
	return fib(a - 1) + fib(a - 2);
}

const adder := proc(var x: int, var y: int) -> int {
	return x + y;
}

const subtractor := proc(var x: int, var y: int) -> int {
	return x - y;
}

const execute := proc(var a: int, var b: int, var op: proc(int, int) -> int) -> int {
	return op(a, b);
}

const main := proc() {
	var numbers: [2]int;
	numbers[0] = 6;
	numbers[1] = 9;
	var result:= execute(numbers[0], numbers[1], proc(var a: int, var b: int) -> int { return a * b; });
	print("%d op %d is %d\n", numbers[0], numbers[1], result);
	//print("Fib of %d is %d\n", numbers[0], fib(numbers[0]));
}
