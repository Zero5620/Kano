
const Node := struct {
	var value: int;
	var next: *Node;
}

const Vec4 := struct {
	var x: float;
	var y: float;
	var z: float;
	var w: float;
}

const factorial := proc (var n: float) -> float {
	if n < 1 then return n;
	return n * factorial(n - 1);
}

const adder : proc (int, int) -> int = proc (var a: int, var b: int) -> int {
	var result:= a + b;
	return result;
}

const main := proc() {
	var color: [2] Vec4;

	color[0].x = cast(int) 1.2;
	color[0].y = 1;
	color[0].z = 0;
	color[0].w = 1;

	var color_p : *Vec4 = null;

	var count := color.count;

	var number0: float = factorial(5);
	var number1: int;

	{
		var ptr: *float;
		ptr = *number0;
		number0 = ?ptr;
	}

	var is_even: bool;
	is_even = !false;

	number0 = 5 & ~number1;

	number0 = - 5 + 6 * 3 / (5 - 8) + 5;
	number1 = 9/3+2;

	var number2: float;
	number2 = number0 + number1;

	if (number1 & 1) == 0 {
		is_even = 0;
	}
	else if number1 != 0 {
		is_even = true;
	}

	var sum:= 0;

	for var i:= 0; i < 100; i = i + 1 {
		sum = sum + i;
	}

	while sum {
		sum = sum - 1;
	}

	var i:= 9;

	do {
		sum += 1;
		i -= 1;
	} while i >= 0;
}
